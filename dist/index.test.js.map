{"version":3,"sources":["../src/index.test.js"],"names":["bounded","Unicorn","name","unicorn","t","is","message","include","foo","bar","throws","exclude","m","react","componentWillMount"],"mappings":"+QAAA,0B;AACA,qB;;AAEA,mBAAK,YAAL,EAAmB,aAAK;AACvB,KAAIA,gBAAJ,CADuB;;AAGjBC,QAHiB;AAItB,mBAAYC,IAAZ,EAAkB;AACjB,QAAKA,IAAL,GAAYA,IAAZ;AACAF,aAAU,gBAAE,IAAF,CAAV;AACA,GAPqB;;AASZ;AACT,WAAU,KAAKE,IAAf;AACA,IAXqB;;;AAcvB,KAAMC,UAAU,IAAIF,OAAJ,CAAY,SAAZ,CAAhB;AACAG,GAAEC,EAAF,CAAKL,OAAL,EAAcG,OAAd,EAfuB;;AAiBhBG,QAjBgB,GAiBLH,OAjBK,CAiBhBG,OAjBgB;AAkBvBF,GAAEC,EAAF,CAAKC,SAAL,EAAgB,qBAAhB;AACA,CAnBD;;AAqBA,mBAAK,gBAAL,EAAuB,aAAK;AACrBL,QADqB;AAE1B,mBAAYC,IAAZ,EAAkB;AACjB,QAAKA,IAAL,GAAYA,IAAZ;AACA,mBAAE,IAAF,EAAQ,EAACK,SAAS,CAAC,KAAD,CAAV,EAAR;AACA,GALyB;;AAOpB;AACL,WAAO,KAAKL,IAAZ;AACA,IATyB;;AAWpB;AACL,WAAO,KAAKA,IAAZ;AACA,IAbyB;;;AAgBR,KAAID,OAAJ,CAAY,SAAZ,CAhBQ,CAgBpBO,GAhBoB,QAgBpBA,GAhBoB,CAgBfC,GAhBe,QAgBfA,GAhBe;;AAkB3BL,GAAEM,MAAF,CAAS,YAAM;AACdF;AACA,EAFD;;AAIAJ,GAAEC,EAAF,CAAKI,KAAL,EAAY,SAAZ;AACA,CAvBD;;AAyBA,mBAAK,gBAAL,EAAuB,aAAK;AACrBR,QADqB;AAE1B,mBAAYC,IAAZ,EAAkB;AACjB,QAAKA,IAAL,GAAYA,IAAZ;AACA,mBAAE,IAAF,EAAQ,EAACS,SAAS,CAAC,KAAD,CAAV,EAAR;AACA,GALyB;;AAOpB;AACL,WAAO,KAAKT,IAAZ;AACA,IATyB;;AAWpB;AACL,WAAO,KAAKA,IAAZ;AACA,IAbyB;;;AAgBR,KAAID,OAAJ,CAAY,SAAZ,CAhBQ,CAgBpBO,GAhBoB,SAgBpBA,GAhBoB,CAgBfC,GAhBe,SAgBfA,GAhBe;;AAkB3BL,GAAEC,EAAF,CAAKG,KAAL,EAAY,SAAZ;;AAEAJ,GAAEM,MAAF,CAAS,YAAM;AACdD;AACA,EAFD;AAGA,CAvBD;;AAyBA,mBAAK,kBAAL,EAAyB,aAAK;AACvBR,QADuB;AAE5B,mBAAYC,IAAZ,EAAkB;AACjB,QAAKA,IAAL,GAAYA,IAAZ;AACAU,cAAEC,KAAF,CAAQ,IAAR;AACA,GAL2B;;AAOP;AACpB,WAAO,KAAKX,IAAZ;AACA,IAT2B;;AAWtB;AACL,WAAO,KAAKA,IAAZ;AACA,IAb2B;;;AAgBK,KAAID,OAAJ,CAAY,SAAZ,CAhBL,CAgBtBO,GAhBsB,SAgBtBA,GAhBsB,CAgBjBM,kBAhBiB,SAgBjBA,kBAhBiB;;AAkB7BV,GAAEM,MAAF,CAAS,YAAM;AACdI;AACA,EAFD;;AAIAV,GAAEC,EAAF,CAAKG,KAAL,EAAY,SAAZ;AACA,CAvBD","file":"index.test.js","sourcesContent":["import test from 'ava';\nimport m from '.';\n\ntest('autoBind()', t => {\n\tlet bounded;\n\n\tclass Unicorn {\n\t\tconstructor(name) {\n\t\t\tthis.name = name;\n\t\t\tbounded = m(this);\n\t\t}\n\n\t\tmessage() {\n\t\t\treturn `${this.name} is awesome!`;\n\t\t}\n\t}\n\n\tconst unicorn = new Unicorn('Rainbow');\n\tt.is(bounded, unicorn);\n\n\tconst {message} = unicorn;\n\tt.is(message(), 'Rainbow is awesome!');\n});\n\ntest('include option', t => {\n\tclass Unicorn {\n\t\tconstructor(name) {\n\t\t\tthis.name = name;\n\t\t\tm(this, {include: ['bar']});\n\t\t}\n\n\t\tfoo() {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tbar() {\n\t\t\treturn this.name;\n\t\t}\n\t}\n\n\tconst {foo, bar} = new Unicorn('Rainbow');\n\n\tt.throws(() => {\n\t\tfoo();\n\t});\n\n\tt.is(bar(), 'Rainbow');\n});\n\ntest('exclude option', t => {\n\tclass Unicorn {\n\t\tconstructor(name) {\n\t\t\tthis.name = name;\n\t\t\tm(this, {exclude: ['bar']});\n\t\t}\n\n\t\tfoo() {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tbar() {\n\t\t\treturn this.name;\n\t\t}\n\t}\n\n\tconst {foo, bar} = new Unicorn('Rainbow');\n\n\tt.is(foo(), 'Rainbow');\n\n\tt.throws(() => {\n\t\tbar();\n\t});\n});\n\ntest('autoBind.react()', t => {\n\tclass Unicorn {\n\t\tconstructor(name) {\n\t\t\tthis.name = name;\n\t\t\tm.react(this);\n\t\t}\n\n\t\tcomponentWillMount() {\n\t\t\treturn this.name;\n\t\t}\n\n\t\tfoo() {\n\t\t\treturn this.name;\n\t\t}\n\t}\n\n\tconst {foo, componentWillMount} = new Unicorn('Rainbow');\n\n\tt.throws(() => {\n\t\tcomponentWillMount();\n\t});\n\n\tt.is(foo(), 'Rainbow');\n});\n\n"]}